<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.demo.dao.ArticleDao">
	
	<insert id="writeArticle">
		insert into article
			set regDate = now()
				, updateDate = now()
				, memberId = #{loginedMemberId}
				, boardId = #{boardId}
				, title = #{title} 
				, `body` = #{body} 
	</insert>	
	
	<select id="getLastInsertId" resultType="int">
		SELECT LAST_INSERT_ID()
	</select>
	
	<select id="getArticleById" resultType="Article">
		select *
			from article
			where id = #{id}
	</select> 
	
	<update id="increaseHitCnt">
		UPDATE article
		    SET hitCnt = hitCnt + 1
		    WHERE id = #{id }
	</update>	
	
	<select id="getForPrintArticle" resultType="Article">
		WITH goodPointList AS
		(
		  SELECT relTypeCode, relId, SUM(`point`) AS goodReactionPoint
		    FROM reactionPoint 
		    WHERE `point` = 1
		    GROUP BY relTypeCode, relId
		), badPointList AS
		(
		  SELECT relTypeCode, relId, SUM(`point`) AS badReactionPoint
		    FROM reactionPoint
		    WHERE `point` = -1 
		    GROUP BY relTypeCode, relId
		)
		select a.*
				, m.nickname as `writer`
				, g.goodReactionPoint
				, b.badReactionPoint
			from article as a
			inner join `member` as m
			on a.memberId = m.id
			INNER JOIN goodPointList AS g
		    ON a.id = g.relId
		    INNER JOIN badPointList AS b
		    ON a.id = b.relId
			where a.id = #{id}
	</select> 
	
	<select id="getArticles" resultType="Article">
		WITH sumPointList AS
		(
		  SELECT relTypeCode
		        , relId
		        , SUM(`point`) AS sumReactionPoint
		    FROM reactionPoint
		    GROUP BY relTypeCode, relId
		)
		
		SELECT a.*
		        , m.nickname AS `writer`
		        , p.sumReactionPoint
		    FROM article AS a
		    INNER JOIN `member` AS m
		    ON a.memberId = m.id
		    INNER JOIN sumPointList AS p
		    ON a.id = p.relId
		    WHERE a.boardId = #{boardId}
		    <if test="searchKeyword != ''">
				<choose>
					<when test="searchKeywordType == 'title'">
						AND a.title like CONCAT('%', #{searchKeyword }, '%')
					</when>
					<when test="searchKeywordType == 'body'">
						AND a.body like CONCAT('%', #{searchKeyword }, '%')
					</when>
					<otherwise>
						AND (
						 	a.title like CONCAT('%', #{searchKeyword }, '%')
							OR a.body like CONCAT('%', #{searchKeyword }, '%')
						)
					</otherwise>
				</choose>
			</if>
		    ORDER BY id DESC
		    LIMIT #{limitStart}, ${itemsInAPage}
	</select>
	
	<update id="modifyArticle" >
		update article
			<set>
				updateDate = now()
				<if test="title != null and title != ''">
					, title = #{title}
				</if>
				<if test="body != null and body != ''">
					, `body` = #{body}
				</if>
			</set> 
			where id = #{id}
	</update>
	
	<delete id="deleteArticle">
		delete from article
			where id = #{id}
	</delete>
	
	<select id="getArticlesCnt" resultType="int">
		SELECT COUNT(id)
			FROM article
			WHERE boardId = #{boardId}
		    <if test="searchKeyword != ''">
				<choose>
					<when test="searchKeywordType == 'title'">
						AND title like CONCAT('%', #{searchKeyword }, '%')
					</when>
					<when test="searchKeywordType == 'body'">
						AND body like CONCAT('%', #{searchKeyword }, '%')
					</when>
					<otherwise>
						AND (
						 	title like CONCAT('%', #{searchKeyword }, '%')
							OR body like CONCAT('%', #{searchKeyword }, '%')
						)
					</otherwise>
				</choose>
			</if>
	</select>
	

</mapper>